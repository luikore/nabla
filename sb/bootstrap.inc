// GENERATED BY mini-sb.rb WITH sb.sb

return NODE(Main, Main, 1, CONS(NODE(Peg, Peg, 2, TOKEN("kw.peg", "Regexp"), CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "CharClass"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SingleChar"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "CharRange"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SingleChar"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.minus"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SingleChar"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "CharRange"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "CharGroup"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "CharGroup"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.char-group"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "CharClass"), TOKEN("op.quantified", "+")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.char-group"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "BracketCharGroup"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "unicode-char-class"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "UnicodeCharClass"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "char-group.predef"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "CharGroupPredef"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Group"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.group"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Branches"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "group.special"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.group"), VAL_NIL),
VAL_NIL)))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Group"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "SingleChar"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "char"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_no_escape"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "RegexpEscape"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Unit"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "interpolate.predef"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Group"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "CharGroup"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SingleChar"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "SeqUnit"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Unit"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "quantifier.kind"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.quantifier"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "quantifier.range.to"), TOKEN("op.quantified", "?")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "quantifier.range.from"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.quantifier"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
VAL_NIL)))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "QuantifiedRange"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$6")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "quantifier"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Quantified"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "flag.encoding"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Flag"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "flag.case-sensitive"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Flag"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "flag.case-insensitive"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Flag"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "anchor"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "PredefAnchor"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Seq"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SeqUnit"), TOKEN("op.quantified", "*")),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Seq"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Branches"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Seq"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.branch"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":cons"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Seq"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Regexp"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.regexp"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Branches"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.regexp"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Regexp"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))))),
CONS(NODE(Peg, Peg, 2, TOKEN("kw.peg", "Callback"), CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "If.Else"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "If"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.else"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.end"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Line"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.else"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.end"), VAL_NIL),
VAL_NIL), VAL_NIL),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "If"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "If.Else"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Line"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.if"), VAL_NIL),
VAL_NIL))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "If"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$5")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Line"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
VAL_NIL), VAL_NIL)),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Unit"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.eq"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.pre-eq"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var"), VAL_NIL),
VAL_NIL)))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Assign"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "If"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "VarRef"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.func"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Call"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.list"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Line"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.list"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "CreateList"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.list"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Line"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.list"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.type"), VAL_NIL),
VAL_NIL)))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "CreateNode"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var.capture"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Capture"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "String"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "lit.nil"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(VAL_NIL,
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "lit.false"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(VAL_FALSE,
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "lit.true"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(VAL_TRUE,
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "lit.int"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse_int"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.prefix"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Call"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.paren"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.paren"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))))))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Infix.Multitive"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.infix.multitive"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Call"), CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Unit"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Infix.Additive"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Multitive"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.infix.additive"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Call"), CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Multitive"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Infix.Compare"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Additive"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.infix.compare"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Call"), CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Additive"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Infix.Logic"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Compare"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.infix.logic"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "InfixLogic"), CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Compare"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Expr"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Infix.Logic"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Stmt"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.var"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "VarDecl"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
VAL_NIL), VAL_NIL)),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Expr"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Callback"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.code"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Stmt"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.code"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Callback"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))))))),
CONS(NODE(Peg, Peg, 2, TOKEN("kw.peg", "Peg"), CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "LookaheadName"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.pattern"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.rule"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.token"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Name"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.rule"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.token"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Term"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "LookaheadName"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.lookahead"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Lookahead"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Name"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Term"), CONS(VAL_NIL,
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.extract.maybe"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Name"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Term"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.extract"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Name"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Term"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.quantified"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Name"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Term"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "SeqRule"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Callback"), TOKEN("op.quantified", "?")),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Term"), TOKEN("op.quantified", "+")),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "SeqRule"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "BranchRight"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.branch.op-table"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "OpBranchRight"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SeqRule"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.branch"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "BranchRight"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SeqRule"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.branch.quantified"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "BranchRight"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "RuleBody"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch.quantified", ">*"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "BranchRight"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), TOKEN("op.quantified", "?")),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":cons"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "SeqRule"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, CreateList, 1, CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Rule"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
VAL_NIL), VAL_NIL)),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "RuleBody"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), TOKEN("op.quantified", "?")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.def"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.rule"), VAL_NIL),
VAL_NIL))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Rule"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Peg"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.peg"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Rule"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.peg"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))),
CONS(NODE(Peg, Peg, 2, TOKEN("kw.peg", "Lex"), CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Pattern"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var.global"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "GlobalVarRef"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "VarRef"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Regexp"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "String"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Rule"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Callback"), TOKEN("op.quantified", "?")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.pre-callback"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Pattern"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Rule"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "RuleLine"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
VAL_NIL), VAL_NIL)),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Rule"), TOKEN("op.quantified", "+")),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Callback"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.end"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "EndCallback"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Rule"), TOKEN("op.quantified", "+")),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Callback"), TOKEN("op.quantified", "?")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.begin"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "BeginCallback"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Rule"), TOKEN("op.quantified", "+")),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "SeqLexRules"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.context"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "RefContext"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.context.partial"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "RefPartialContext"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Lex"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "end.lex"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "RuleLine"), TOKEN("op.quantified", "*")),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "begin.lex"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Peg, Peg, 2, TOKEN("kw.peg", "Main"), CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Pattern"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Regexp"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "String"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Ins"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Peg"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.context"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.peg"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Peg"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Lex"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.context"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.lex"), VAL_NIL),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Lex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.var"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.var"), VAL_NIL),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "VarDecl"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Pattern"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "op.eq"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.pre-eq"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "name.pattern"), VAL_NIL),
CONS(NODE(Peg, Term, 2, TOKEN("name.token", "kw.pattern"), VAL_NIL),
VAL_NIL))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "PatternIns"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$5")),
CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Line"), CONS(NODE(Peg, BranchRight, 2, TOKEN("op.branch", "/"), NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Ins"), VAL_NIL),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.token", "space.eol"), VAL_NIL),
VAL_NIL), VAL_NIL),
VAL_NIL))),
CONS(NODE(Peg, Rule, 2, TOKEN("name.rule", "Main"), CONS(NODE(Peg, Rule, 2, CONS(NODE(Peg, Term, 2, TOKEN("name.rule", "Line"), TOKEN("op.quantified", "*")),
VAL_NIL), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":return"), CONS(NODE(Callback, CreateNode, 2, TOKEN("name.type", "Main"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "*Spaces"), CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, VAL_NIL),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\z")),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(10),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "[^"), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(VAL_FROM_INT(35),
VAL_NIL))),
VAL_NIL)), TOKEN("quantifier", "?")),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "*")),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":style"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("comment"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("space.eol"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", "?="), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("space.pre-eq"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", "?="), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(123),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("space.pre-callback"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "*RegexpQuantifier"), CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(63), VAL_FROM_INT(63)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(42), VAL_FROM_INT(42)),
VAL_NIL))), TOKEN("quantifier", "?")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\d")), TOKEN("quantifier", "*")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(44),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\d")), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(123),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$5")),
CONS(STR("quantifier.kind"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(STR("end.quantifier"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(STR("quantifier.range.to"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(STR("quantifier.range.from"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("begin.quantifier"),
VAL_NIL))),
VAL_NIL)))))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(63), VAL_FROM_INT(63)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(42), VAL_FROM_INT(42)),
VAL_NIL))), TOKEN("quantifier", "?")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\d")), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(32),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(123),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$4")),
CONS(STR("quantifier.kind"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$3")),
CONS(STR("end.quantifier"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(STR("quantifier.range.from"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("begin.quantifier"),
VAL_NIL))),
VAL_NIL))))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(42),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(63),
CONS(VAL_FROM_INT(42),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(42),
CONS(VAL_FROM_INT(42),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(43),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(63),
CONS(VAL_FROM_INT(43),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(42),
CONS(VAL_FROM_INT(43),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(63),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(63),
CONS(VAL_FROM_INT(63),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(42),
CONS(VAL_FROM_INT(63),
VAL_NIL)))),
VAL_NIL)))))))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("quantifier"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "RegexpEscape"), CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "[^"), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_no_escape"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$0")),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(114), VAL_FROM_INT(114)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(110), VAL_FROM_INT(110)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(116), VAL_FROM_INT(116)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(102), VAL_FROM_INT(102)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(98), VAL_FROM_INT(98)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(97)),
VAL_NIL))))))),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_escape_sp"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$0")),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
VAL_NIL))))),
VAL_NIL)),
CONS(VAL_FROM_INT(117),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(123),
CONS(VAL_FROM_INT(117),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
VAL_NIL))),
VAL_NIL)),
CONS(VAL_FROM_INT(120),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("\\\\")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "Regexp"), CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "[^"), CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\s")),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\s")), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, VAL_NIL),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c(")")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.group"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(62),
CONS(VAL_FROM_INT(63),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(33),
CONS(VAL_FROM_INT(60),
CONS(VAL_FROM_INT(63),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(60),
CONS(VAL_FROM_INT(63),
VAL_NIL)))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(33),
CONS(VAL_FROM_INT(63),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(63),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(58),
CONS(VAL_FROM_INT(63),
VAL_NIL))),
VAL_NIL))))))), TOKEN("quantifier", "?")),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(40),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$2")),
CONS(STR("group.special"),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("begin.group"),
VAL_NIL))),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(41),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(45),
VAL_NIL))),
VAL_NIL)), TOKEN("quantifier", "?")),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(58),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(63),
CONS(VAL_FROM_INT(40),
VAL_NIL)))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("flag.encoding"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("(?I)")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("flag.case-sensitive"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("(?i)")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("flag.case-insensitive"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
CONS(VAL_FROM_INT(123),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("interpolate.predef"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("-")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char"),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "else")),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.minus"),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "cg_stack")),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "if")),
VAL_NIL)))))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("]")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "cg_stack"), NODE(Callback, Call, 2, TOKEN("name.func", ":tail"), CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "cg_stack")),
VAL_NIL))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.char-group"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(94), TOKEN("quantifier", "?")),
CONS(VAL_FROM_INT(91),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "cg_stack"), NODE(Callback, Call, 2, TOKEN("name.func", ":cons"), CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "cg_stack")),
CONS(VAL_TRUE,
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.char-group"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("|")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.branch"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, RefPartialContext, 1, TOKEN("name.context.partial", "*RegexpQuantifier")),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "RegexpEscape")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
CONS(VAL_FROM_INT(123),
CONS(VAL_FROM_INT(112),
CONS(VAL_FROM_INT(92),
VAL_NIL))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("unicode-char-class"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(46),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(83), VAL_FROM_INT(83)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(115), VAL_FROM_INT(115)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(72), VAL_FROM_INT(72)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(104), VAL_FROM_INT(104)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(87), VAL_FROM_INT(87)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(119), VAL_FROM_INT(119)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(68), VAL_FROM_INT(68)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(100), VAL_FROM_INT(100)),
VAL_NIL))))))))),
CONS(VAL_FROM_INT(92),
VAL_NIL))),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char-group.predef"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(90), VAL_FROM_INT(90)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(122), VAL_FROM_INT(122)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(65)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(97)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(66), VAL_FROM_INT(66)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(98), VAL_FROM_INT(98)),
VAL_NIL))))))),
CONS(VAL_FROM_INT(92),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(36),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(94),
VAL_NIL)),
VAL_NIL)))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("anchor"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("/")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse"), VAL_NIL),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.regexp"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("/")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.regexp"),
VAL_NIL)),
CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "cg_stack"), VAL_NIL),
CONS(NODE(Callback, VarDecl, 1, TOKEN("name.var", "cg_stack")),
VAL_NIL)))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))))))))))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "String"), CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", ".")),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_no_escape"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$0")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "[^"), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(92),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_no_escape"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(114), VAL_FROM_INT(114)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(110), VAL_FROM_INT(110)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(116), VAL_FROM_INT(116)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(102), VAL_FROM_INT(102)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(98), VAL_FROM_INT(98)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(97)),
VAL_NIL))))))),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(92),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_escape_sp"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.escape.sp"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
VAL_NIL))))),
VAL_NIL)),
CONS(VAL_FROM_INT(117),
CONS(VAL_FROM_INT(92),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.u4"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(125),
CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)),
CONS(VAL_FROM_INT(123),
CONS(VAL_FROM_INT(117),
CONS(VAL_FROM_INT(92),
VAL_NIL)))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.ux"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\h")),
VAL_NIL))),
VAL_NIL)),
CONS(VAL_FROM_INT(120),
CONS(VAL_FROM_INT(92),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), NODE(Callback, Call, 2, TOKEN("name.func", ":concat_char"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":char_hex"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
VAL_NIL)),
CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("char.hex"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(34),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":yield"), CONS(NODE(Callback, VarRef, 1, TOKEN("name.var", "buf")),
VAL_NIL)),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.string"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(34),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.string"),
VAL_NIL)),
CONS(NODE(Callback, Assign, 2, TOKEN("name.var", "buf"), STR("")),
CONS(NODE(Callback, VarDecl, 1, TOKEN("name.var", "buf")),
VAL_NIL)))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "Callback"), CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, VAL_NIL),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", "?="), CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("space.pre-eq"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "[^"), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(VAL_FROM_INT(35),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":style"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$0")),
CONS(STR("comment"),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(10), VAL_FROM_INT(10)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(44), VAL_FROM_INT(44)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("space.eol"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("!")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.prefix"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("=")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.eq"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c(")")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.paren"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("(")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.paren"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("]")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.list"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("[")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.list"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(64),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(37),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(47),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(42),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(42),
CONS(VAL_FROM_INT(42),
VAL_NIL))),
VAL_NIL)))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.infix.multitive"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(124),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(38),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(94),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(45),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(43),
VAL_NIL)),
VAL_NIL)))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.infix.additive"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(33),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(61),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(60),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(61),
CONS(VAL_FROM_INT(62),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(60),
VAL_NIL)),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(62),
VAL_NIL)),
VAL_NIL))))))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.infix.compare"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(124),
CONS(VAL_FROM_INT(124),
VAL_NIL))),
CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(38),
CONS(VAL_FROM_INT(38),
VAL_NIL))),
VAL_NIL))), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.infix.logic"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.var"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\d")), TOKEN("quantifier", "+")),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(45), TOKEN("quantifier", "?")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("lit.int"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(114),
CONS(VAL_FROM_INT(97),
CONS(VAL_FROM_INT(118),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.var"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(10),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(115),
CONS(VAL_FROM_INT(108),
CONS(VAL_FROM_INT(97),
CONS(VAL_FROM_INT(102),
VAL_NIL))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("lit.const"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(10),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(117),
CONS(VAL_FROM_INT(114),
CONS(VAL_FROM_INT(116),
VAL_NIL)))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("lit.true"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(108),
CONS(VAL_FROM_INT(105),
CONS(VAL_FROM_INT(110),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("lit.nil"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(100),
CONS(VAL_FROM_INT(110),
CONS(VAL_FROM_INT(101),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.end"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(10),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(115),
CONS(VAL_FROM_INT(108),
CONS(VAL_FROM_INT(101),
VAL_NIL)))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.else"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(102),
CONS(VAL_FROM_INT(105),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.if"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.type"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", ".")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.method"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(64), VAL_FROM_INT(64)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(37), VAL_FROM_INT(37)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(33), VAL_FROM_INT(33)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(61), VAL_FROM_INT(61)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(62), VAL_FROM_INT(62)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(60), VAL_FROM_INT(60)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(124), VAL_FROM_INT(124)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(38), VAL_FROM_INT(38)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(94), VAL_FROM_INT(94)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(47), VAL_FROM_INT(47)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(42), VAL_FROM_INT(42)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(45), VAL_FROM_INT(45)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(43), VAL_FROM_INT(43)),
CONS(NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")),
VAL_NIL))))))))))))))), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(58),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.func"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\d")), TOKEN("quantifier", "+")),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(45), TOKEN("quantifier", "?")),
CONS(VAL_FROM_INT(36),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.var.capture"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "String")),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("}")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse"), VAL_NIL),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.code"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("{")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.code"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))))))))))))))))))))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "Peg"), CONS(NODE(Lex, RefPartialContext, 1, TOKEN("name.context.partial", "*Spaces")),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(64),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.pattern"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(94), VAL_FROM_INT(94)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(38), VAL_FROM_INT(38)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.lookahead"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Callback")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("/")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.branch"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "$")),
CONS(VAL_FROM_INT(47),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.branch.op-table"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(43), VAL_FROM_INT(43)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(63), VAL_FROM_INT(63)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(42), VAL_FROM_INT(42)),
VAL_NIL)))),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(60), VAL_FROM_INT(60)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(62), VAL_FROM_INT(62)),
VAL_NIL))),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.branch.quantified"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("?!")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.extract.maybe"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("!")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.extract"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(43), VAL_FROM_INT(43)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(63), VAL_FROM_INT(63)),
CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(42), VAL_FROM_INT(42)),
VAL_NIL)))),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.quantifier"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c(":")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("op.def"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(45),
VAL_NIL))),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(46),
VAL_NIL)))),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(45),
VAL_NIL))),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.token"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(46),
VAL_NIL))),
VAL_NIL)), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.rule"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("]")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse"), VAL_NIL),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.peg"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("[")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.peg"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))))))))))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "Lex"), CONS(NODE(Lex, RefPartialContext, 1, TOKEN("name.context.partial", "*Spaces")),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)),
CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "$")),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.var.global"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.var"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.context"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
CONS(VAL_FROM_INT(42),
VAL_NIL)))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("name.context.partial"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(100),
CONS(VAL_FROM_INT(110),
CONS(VAL_FROM_INT(101),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.end"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(110),
CONS(VAL_FROM_INT(105),
CONS(VAL_FROM_INT(103),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(98),
VAL_NIL))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.begin"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Callback")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "String")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Regexp")),
VAL_NIL)),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("]")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse"), VAL_NIL),
CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("end.lex"),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, BeginCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(String, String, 1, nb_string_new_literal_c("[")), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("begin.lex"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))))))),
CONS(NODE(Lex, Lex, 2, TOKEN("kw.lex", "Main"), CONS(NODE(Lex, RefPartialContext, 1, TOKEN("name.context.partial", "*Spaces")),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Regexp")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "String")),
VAL_NIL)),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Peg")),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(61),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "*")),
VAL_NIL)))),
VAL_NIL)), VAL_NIL),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("name.context"),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(103),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(112),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.peg"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, RefContext, 1, TOKEN("name.context", "Lex")),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(61),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "*")),
VAL_NIL)))),
VAL_NIL)), VAL_NIL),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(65), VAL_FROM_INT(90)),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(42), TOKEN("quantifier", "?")),
VAL_NIL)))),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("name.context"),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(120),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(108),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.lex"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "*")),
CONS(NODE(Regexp, BracketCharGroup, 2, TOKEN("begin.char-group", "["), CONS(NODE(Regexp, CharRange, 2, VAL_FROM_INT(97), VAL_FROM_INT(122)),
VAL_NIL)),
VAL_NIL))),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("name.var"),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(114),
CONS(VAL_FROM_INT(97),
CONS(VAL_FROM_INT(118),
VAL_NIL))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.var"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))),
CONS(NODE(Lex, SeqLexRules, 1, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(VAL_FROM_INT(32),
CONS(VAL_FROM_INT(61),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "*")),
VAL_NIL)))),
VAL_NIL)), VAL_NIL),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Group, 2, TOKEN("group.special", ""), CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, Quantified, 2, NODE(Regexp, CharGroupPredef, 1, TOKEN("char-group.predef", "\\w")), TOKEN("quantifier", "+")),
CONS(VAL_FROM_INT(64),
VAL_NIL))),
VAL_NIL)),
CONS(NODE(Regexp, Quantified, 2, VAL_FROM_INT(32), TOKEN("quantifier", "+")),
VAL_NIL))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(NODE(Callback, Capture, 1, TOKEN("name.var.capture", "$1")),
CONS(STR("name.pattern"),
VAL_NIL))),
VAL_NIL)),
VAL_NIL)),
CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\b")),
CONS(VAL_FROM_INT(110),
CONS(VAL_FROM_INT(114),
CONS(VAL_FROM_INT(101),
CONS(VAL_FROM_INT(116),
CONS(VAL_FROM_INT(116),
CONS(VAL_FROM_INT(97),
CONS(VAL_FROM_INT(112),
VAL_NIL))))))))),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":token"), CONS(STR("kw.pattern"),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)))),
CONS(NODE(Lex, EndCallback, 2, VAL_NIL, CONS(NODE(Lex, Rule, 2, NODE(Regexp, Regexp, 1, CONS(NODE(Regexp, Seq, 1, CONS(NODE(Regexp, PredefAnchor, 1, TOKEN("anchor", "\\z")),
VAL_NIL)),
VAL_NIL)), CONS(NODE(Callback, Callback, 1, CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":compile_spellbreak"), CONS(NODE(Callback, Call, 2, TOKEN("name.func", ":parse"), VAL_NIL),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL)),
VAL_NIL))))))))),
VAL_NIL)))))))))))))));
