// GENERATED BY mini-sb.rb WITH sb.sb

DEF_NODE(Callback, "stmts");
DEF_NODE(VarDecl, "var_name");
DEF_NODE(Assign, "var_name", "expr");
DEF_NODE(Call, "func_name", "args");
DEF_NODE(SplatEntry, "expr");
DEF_NODE(CreateNode, "ty", "elems");
DEF_NODE(CreateList, "elems");
DEF_NODE(Capture, "var_name");
DEF_NODE(VarRef, "var_name");
DEF_NODE(Regexp, "reg");
DEF_NODE(Branches, "branches");
DEF_NODE(Seq, "seq");
DEF_NODE(PredefAnchor, "anchor");
DEF_NODE(Flag, "flag");
DEF_NODE(Quantified, "unit", "quantifier");
DEF_NODE(Char, "c");
DEF_NODE(Group, "special", "branches");
DEF_NODE(CharGroupPredef, "tok");
DEF_NODE(BracketCharGroup, "beg_tok", "char_classes");
DEF_NODE(CharRange, "from", "to");
DEF_NODE(Lex, "context", "rules");
DEF_NODE(String, "str");
DEF_NODE(RefPartialContext, "name");
DEF_NODE(RefContext, "name");
DEF_NODE(SeqLexRules, "rules");
DEF_NODE(BeginCallback, "first_cb", "rules");
DEF_NODE(EndCallback, "first_cb", "rules");
DEF_NODE(LexRule, "pattern", "code");
DEF_NODE(Peg, "context", "rules");
DEF_NODE(PegRule, "name", "body");
DEF_NODE(SeqRule, "terms", "code");
DEF_NODE(BranchRight, "branch_op", "rhs");
DEF_NODE(Term, "name", "affix");
